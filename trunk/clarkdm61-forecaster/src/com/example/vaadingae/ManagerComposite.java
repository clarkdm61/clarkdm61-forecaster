package com.example.vaadingae;

import java.util.Collections;
import java.util.List;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Property;
import com.vaadin.data.Property.ValueChangeEvent;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.FormLayout;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Panel;
import com.vaadin.ui.Table;
import com.vaadin.ui.VerticalLayout;
import com.vaadin.ui.Window;

import dmc.forecaster.client.ForecasterService;
import dmc.forecaster.server.ForecasterServiceImpl;
import dmc.forecaster.shared.FinancialEvent;

public class ManagerComposite extends CustomComponent {

	@AutoGenerated
	private VerticalLayout mainLayout;

	@AutoGenerated
	private HorizontalLayout horizontalButtonLayout;

	@AutoGenerated
	private Button btnDelete;

	@AutoGenerated
	private Button btnEdit;

	@AutoGenerated
	private Button btnNew;

	@AutoGenerated
	private Panel managerTablePanel;

	@AutoGenerated
	private VerticalLayout verticalLayout_2;

	@AutoGenerated
	private Table managerTable;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	private static final long serialVersionUID = -5330676819611696123L;
	
	private FinancialEvent selectedEvent = null;
	
	/**
	 * members for the financialEvent editor
	 */
	private FinancialEventEditor financialEventDialog = new FinancialEventEditor();
	// name
	// description
	// income/expense
	// start date
	// reoccurrence interval
	// end date
	// amount
	
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public ManagerComposite() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here:
		initManagerTable();
		constructFinancialEventDialog();
		
		// add event handlers
		addManagerTableEventHandler();
		addEditEventHandler();
	}
	
	protected void constructFinancialEventDialog() {
		FormLayout layout = new FormLayout();
		layout.setSizeUndefined();
		
	}
	
	/**
	 * Invoke getAllEvents, then initialize list of existing FinancialEvents
	 */
	protected void initManagerTable() {
		ForecasterService svc =  new ForecasterServiceImpl();
		List<FinancialEvent> list =  svc.getAllEvents();

		Collections.sort(list);
		
		FinancialEventContainer container = new FinancialEventContainer(FinancialEvent.class, list);
		
		managerTable.setContainerDataSource(container);
		managerTable.setVisibleColumns(FinancialEventContainer.NATURAL_COL_ORDER);
		managerTable.setColumnHeaders(FinancialEventContainer.COL_HEADERS_ENGLISH);
	}
	
	/**
	 * Handle selection of FinancialEvents in ManagerTab so they can be edited or deleted.
	 */
	protected void addManagerTableEventHandler() {
		managerTable.setSelectable(true);
		managerTable.setImmediate(true);
		managerTable.addListener(new Property.ValueChangeListener() {

			@Override
			public void valueChange(ValueChangeEvent event) {
				FinancialEvent fe = (FinancialEvent)((Table) event.getProperty()).getValue();
				setSelectedEvent(fe);
			}
			
		});
	}
	
	/**
	 * Edit the currently selected event
	 */
	protected void addEditEventHandler() {
		
		btnEdit.addListener(new Button.ClickListener() {

			@Override
			public void buttonClick(ClickEvent event) {
				openForEdit();
			}});
		
	}
	
	protected void openForEdit() {
		//financialEventDialog.openForEdit(selectedEvent);\
		Window myWindow = new Window("My Dialog");
		myWindow.setImmediate(true);
		myWindow.setPositionX(200);
		myWindow.setPositionY(100);
		myWindow.setSizeFull();
		myWindow.setClosable(true);
		
		VaadingaeApplication.mainWindow.addWindow(myWindow);
		//myWindow.setParent(VaadingaeApplication.mainWindow);
		myWindow.getParent();
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("-1px");
		mainLayout.setMargin(false);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("-1px");
		
		// managerTablePanel
		managerTablePanel = buildManagerTablePanel();
		mainLayout.addComponent(managerTablePanel);
		
		// horizontalButtonLayout
		horizontalButtonLayout = buildHorizontalButtonLayout();
		mainLayout.addComponent(horizontalButtonLayout);
		
		return mainLayout;
	}

	@AutoGenerated
	private Panel buildManagerTablePanel() {
		// common part: create layout
		managerTablePanel = new Panel();
		managerTablePanel.setImmediate(false);
		managerTablePanel.setWidth("100.0%");
		managerTablePanel.setHeight("-1px");
		
		// verticalLayout_2
		verticalLayout_2 = buildVerticalLayout_2();
		managerTablePanel.setContent(verticalLayout_2);
		
		return managerTablePanel;
	}

	@AutoGenerated
	private VerticalLayout buildVerticalLayout_2() {
		// common part: create layout
		verticalLayout_2 = new VerticalLayout();
		verticalLayout_2.setImmediate(false);
		verticalLayout_2.setWidth("100.0%");
		verticalLayout_2.setHeight("-1px");
		verticalLayout_2.setMargin(false);
		
		// managerTable
		managerTable = new Table();
		managerTable.setImmediate(false);
		managerTable.setWidth("100.0%");
		managerTable.setHeight("-1px");
		verticalLayout_2.addComponent(managerTable);
		
		return verticalLayout_2;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalButtonLayout() {
		// common part: create layout
		horizontalButtonLayout = new HorizontalLayout();
		horizontalButtonLayout.setImmediate(false);
		horizontalButtonLayout.setWidth("100.0%");
		horizontalButtonLayout.setHeight("-1px");
		horizontalButtonLayout.setMargin(false);
		
		// btnNew
		btnNew = new Button();
		btnNew.setCaption("New");
		btnNew.setImmediate(true);
		btnNew.setWidth("-1px");
		btnNew.setHeight("-1px");
		horizontalButtonLayout.addComponent(btnNew);
		
		// btnEdit
		btnEdit = new Button();
		btnEdit.setCaption("Edit");
		btnEdit.setImmediate(true);
		btnEdit.setWidth("-1px");
		btnEdit.setHeight("-1px");
		horizontalButtonLayout.addComponent(btnEdit);
		
		// btnDelete
		btnDelete = new Button();
		btnDelete.setCaption("Delete");
		btnDelete.setImmediate(true);
		btnDelete.setWidth("-1px");
		btnDelete.setHeight("-1px");
		horizontalButtonLayout.addComponent(btnDelete);
		
		return horizontalButtonLayout;
	}

	public FinancialEvent getSelectedEvent() {
		return selectedEvent;
	}

	public void setSelectedEvent(FinancialEvent selectedEvent) {
		this.selectedEvent = selectedEvent;
	}

}
